"use strict";exports.id=147,exports.ids=[147],exports.modules={66147:(a,b,c)=>{c.d(b,{verifyAdminAuthFromRequest:()=>f}),c(86802);var d=c(77815),e=c(40190);function f(a){try{let b=(0,e.x$)(a);if(!e.bO.isAllowed(b).allowed)return!1;let c=a.headers.get("cookie");if(!c)return!1;let f=Object.fromEntries(c.split(";").map(a=>{let[b,c]=a.trim().split("=");return[b,c]}))["admin-token"];if(!f)return!1;let g=process.env.JWT_SECRET;if(!g)return!1;let h=d.Q.verifyJWTToken(f,g);if(!h.admin||!h.sessionId||h.loginTime&&Date.now()-h.loginTime>864e5)return!1;return!0}catch(a){return console.error("Token verification failed:",a),!1}}},77815:(a,b,c)=>{c.d(b,{Q:()=>i});var d=c(55511),e=c.n(d),f=c(7028),g=c(48318),h=c.n(g);class i{static{this.SALT_ROUNDS=12}static{this.JWT_EXPIRY="24h"}static{this.REFRESH_TOKEN_EXPIRY="7d"}static async hashPassword(a){return f.Ay.hash(a,this.SALT_ROUNDS)}static async verifyPassword(a,b){return f.Ay.compare(a,b)}static generateSecureRandom(a=32){return e().randomBytes(a).toString("hex")}static createJWTToken(a,b,c={}){let d={expiresIn:this.JWT_EXPIRY,issuer:"larrycorso-admin",audience:"larrycorso-admin",algorithm:"HS256",jwtid:this.generateSecureRandom(16),...c};return h().sign(a,b,d)}static verifyJWTToken(a,b){try{return h().verify(a,b,{issuer:"larrycorso-admin",audience:"larrycorso-admin",algorithms:["HS256"]})}catch(a){throw Error("Invalid or expired token")}}static createRefreshToken(){return this.generateSecureRandom(64)}static constantTimeCompare(a,b){if(a.length!==b.length)return!1;let c=0;for(let d=0;d<a.length;d++)c|=a.charCodeAt(d)^b.charCodeAt(d);return 0===c}static generateSessionToken(){return this.generateSecureRandom(48)}static hashSessionToken(a){return e().createHash("sha256").update(a).digest("hex")}static validatePasswordStrength(a){let b=[],c=0;for(let d of(a.length<8?b.push("Password must be at least 8 characters long"):a.length>=12?c+=2:c+=1,/[a-z]/.test(a)?c+=1:b.push("Password must contain at least one lowercase letter"),/[A-Z]/.test(a)?c+=1:b.push("Password must contain at least one uppercase letter"),/\d/.test(a)?c+=1:b.push("Password must contain at least one number"),/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(a)?c+=2:b.push("Password must contain at least one special character"),[/(.)\1{2,}/,/123456/,/abcdef/,/password/i,/admin/i,/user/i,/guest/i]))if(d.test(a)){b.push("Password contains common patterns and may be easily guessed"),c=Math.max(0,c-2);break}return{isValid:0===b.length&&c>=4,errors:b,score:Math.min(10,c)}}static generateAPIKey(){let a=this.generateSecureRandom(32);return`lc_${a}`}static validateAPIKeyFormat(a){return/^lc_[a-f0-9]{64}$/.test(a)}}}};